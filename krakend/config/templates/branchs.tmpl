{
   "endpoint": "/branchs",
   "method": "GET",
   "output_encoding": "json",
   "querystring_params": [
      "*"
   ],
   "headers_to_pass": {{ marshal .HEADERS_TO_PASS }},
   "extra_config": {
      "github.com/devopsfaith/krakend-jose/validator": {
        "alg": "{{ .JWT_VALIDATOR.alg }}",
        "issuer": "{{ .JWT_VALIDATOR.issuer }}",
        "jwk-url": "{{ .JWT_VALIDATOR.jwk_url }}",
        "roles": [
          "super-admin", "admin" ,"staff" , "citoyen"
        ],
        "roles_key": "{{ .JWT_VALIDATOR.roles_key }}",
        "roles_key_is_nested" :{{ .JWT_VALIDATOR.roles_key_is_nested }} ,
        "disable_jwk_security": {{ .JWT_VALIDATOR.disable_jwk_security }}
      }
    }      ,
   "backend": [
      {
         "url_pattern": "api/branchs",
         "method": "GET",
         "encoding": "json",
         "sd": "{{ .SERVICE_DISCOVERY }}",
         "host": {{ marshal .AUTHORITIES_SERVICE_HOSTS }},
         "extra_config": {
            "github.com/devopsfaith/krakend/http": {
               "return_error_details": "log"
            }
         }
      }
   ]
},
{
   "endpoint": "/branchs/{id}",
   "method": "GET",
   "output_encoding": "json",
   "headers_to_pass": {{ marshal .HEADERS_TO_PASS }},
   "extra_config": {
      "github.com/devopsfaith/krakend-jose/validator": {
        "alg": "{{ .JWT_VALIDATOR.alg }}",
        "issuer": "{{ .JWT_VALIDATOR.issuer }}",
        "jwk-url": "{{ .JWT_VALIDATOR.jwk_url }}",
        "roles": [
          "super-admin", "admin" ,"staff" , "citoyen"
        ],
        "roles_key": "{{ .JWT_VALIDATOR.roles_key }}",
        "roles_key_is_nested" :{{ .JWT_VALIDATOR.roles_key_is_nested }} ,
        "disable_jwk_security": {{ .JWT_VALIDATOR.disable_jwk_security }}
      }
    }      ,
   "backend": [
      {
         "url_pattern": "api/branchs/{id}",
         "method": "GET",
         "encoding": "json",
         "sd": "{{ .SERVICE_DISCOVERY }}",
         "host": {{ marshal .AUTHORITIES_SERVICE_HOSTS }},
         "extra_config": {
            "github.com/devopsfaith/krakend/http": {
               "return_error_details": "log"
            }
         }
      }
   ]
},
{
   "endpoint": "/branchs/{id}",
   "method": "PUT",
   "output_encoding": "json",
   "headers_to_pass": {{ marshal .HEADERS_TO_PASS }},
   "extra_config": {
      "github.com/devopsfaith/krakend-jose/validator": {
        "alg": "{{ .JWT_VALIDATOR.alg }}",
        "issuer": "{{ .JWT_VALIDATOR.issuer }}",
        "jwk-url": "{{ .JWT_VALIDATOR.jwk_url }}",
        "roles": [
          "super-admin", "admin"
        ],
        "roles_key": "{{ .JWT_VALIDATOR.roles_key }}",
        "roles_key_is_nested" :{{ .JWT_VALIDATOR.roles_key_is_nested }} ,
        "disable_jwk_security": {{ .JWT_VALIDATOR.disable_jwk_security }}
      },
      "github.com/devopsfaith/krakend-cel": [
         {
            "check_expr": "has(JWT.authoritie) or has(JWT.branch) or has(JWT.superadmin)"
         }
      ]
    }      ,
   "backend":[
      {
         "url_pattern":"api/branchs/{id}",
         "method":"PUT",
         "encoding": "json",
         "sd": "{{ .SERVICE_DISCOVERY }}",
         "host": {{ marshal .AUTHORITIES_SERVICE_HOSTS }},
         "extra_config": {
            "github.com/devopsfaith/krakend/http": {
               "return_error_details": "log"
            }
         }
      }
   ]
},
{
   "endpoint": "/branchs",
   "method": "POST",
   "output_encoding": "json",
   "headers_to_pass": {{ marshal .HEADERS_TO_PASS }},
   "extra_config": {
      "github.com/devopsfaith/krakend-jose/validator": {
        "alg": "{{ .JWT_VALIDATOR.alg }}",
        "issuer": "{{ .JWT_VALIDATOR.issuer }}",
        "jwk-url": "{{ .JWT_VALIDATOR.jwk_url }}",
        "roles": [
          "super-admin", "admin" ,"staff" , "citoyen"
        ],
        "propagate-claims": [
            [
               "superadmin",
               "X-superadmin"
            ],
            [
               "authority",
               "X-authority"
            ]
         ],
        "roles_key": "{{ .JWT_VALIDATOR.roles_key }}",
        "roles_key_is_nested" :{{ .JWT_VALIDATOR.roles_key_is_nested }} ,
        "disable_jwk_security": {{ .JWT_VALIDATOR.disable_jwk_security }}
      }
   }      ,
   "backend": [
      {
         "url_pattern":"api/branchs",
         "method":"POST",
         "encoding": "json",
         "sd": "{{ .SERVICE_DISCOVERY }}",
         "host": {{ marshal .AUTHORITIES_SERVICE_HOSTS }},
         "extra_config": {
            "github.com/devopsfaith/krakend/http": {
               "return_error_details": "log"
            },
            "github.com/devopsfaith/krakend-lua/proxy/backend": {
               "allow_open_libs": true,
               "pre": " local r = request.load(); local  b = r:body() ;  is_same2 = not type(r:headers('X-superadmin')) == nil; is_same = string.find(b, r:headers('X-authority'));  if not  (is_same or is_same2)  then    custom_error('Not allowed on this route.', 403); end"
            }
         }
      }
   ]
},
{
   "endpoint": "/branchs/{id}",
   "method": "DELETE",
   "output_encoding": "json",
   "headers_to_pass": {{ marshal .HEADERS_TO_PASS }},
   "extra_config": {
      "github.com/devopsfaith/krakend-jose/validator": {
        "alg": "{{ .JWT_VALIDATOR.alg }}",
        "issuer": "{{ .JWT_VALIDATOR.issuer }}",
        "jwk-url": "{{ .JWT_VALIDATOR.jwk_url }}",
        "roles": [
          "super-admin", "admin"
        ],
        "roles_key": "{{ .JWT_VALIDATOR.roles_key }}",
        "roles_key_is_nested" :{{ .JWT_VALIDATOR.roles_key_is_nested }} ,
        "disable_jwk_security": {{ .JWT_VALIDATOR.disable_jwk_security }}
      },
      "github.com/devopsfaith/krakend-cel": [
         {
            "check_expr": "has(JWT.authoritie) or has(JWT.branch) or has(JWT.superadmin)"
         }
      ]
       }      ,

   "backend":[
      {
         "url_pattern": "api/branchs/{id}",
         "method":"DELETE",
         "encoding": "json",
         "sd": "{{ .SERVICE_DISCOVERY }}",
         "host": {{ marshal .AUTHORITIES_SERVICE_HOSTS }},
         "extra_config": {
            "github.com/devopsfaith/krakend/http": {
               "return_error_details": "log"
            }
         }
      }
   ]
}